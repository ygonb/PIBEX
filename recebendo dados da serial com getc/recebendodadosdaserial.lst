CCS PCM C Compiler, Version 5.008, 5967               07-jul-20 18:06

               Filename:   D:\OneDrive\Documents\GitHub\PIBEX\recebendo dados da serial com getc\recebendodadosdaserial.lst

               ROM used:   207 words (20%)
                           Largest free fragment is 817
               RAM used:   5 (8%) at main() level
                           6 (9%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
0004:  CALL   3FF
0005:  BSF    03.5
0006:  MOVWF  10
0007:  MOVLW  00
0008:  MOVWF  0A
0009:  GOTO   02C
.................... #include <recebendodadosdaserial.h> 
.................... #include <12F675.h> 
.................... //////// Standard Header file for the PIC12F675 device //////////////// 
.................... #device PIC12F675 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES MCLR                   //Master Clear - ativado 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES INTRC_IO         // Oscilador interno com pinos de IO disponíveis 
....................  
.................... #use delay(internal=4MHz) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_A0,rcv=PIN_A2,bits=8,stream=PORT1) 
000A:  BSF    03.5
000B:  BCF    05.0
000C:  BCF    03.5
000D:  BCF    05.0
000E:  MOVLW  08
000F:  MOVWF  21
0010:  GOTO   011
0011:  NOP
0012:  BSF    21.7
0013:  GOTO   022
0014:  BCF    21.7
0015:  RRF    25,F
0016:  BTFSC  03.0
0017:  BSF    05.0
0018:  BTFSS  03.0
0019:  BCF    05.0
001A:  BSF    21.6
001B:  GOTO   022
001C:  BCF    21.6
001D:  DECFSZ 21,F
001E:  GOTO   015
001F:  GOTO   020
0020:  NOP
0021:  BSF    05.0
0022:  MOVLW  1C
0023:  MOVWF  04
0024:  DECFSZ 04,F
0025:  GOTO   024
0026:  GOTO   027
0027:  BTFSC  21.7
0028:  GOTO   014
0029:  BTFSC  21.6
002A:  GOTO   01C
002B:  GOTO   0CD (RETURN)
....................  
....................  
.................... int caracter; 
....................  
.................... void main() 
002C:  MOVF   03,W
002D:  ANDLW  1F
002E:  MOVWF  03
002F:  BSF    03.5
0030:  BCF    05.0
0031:  BCF    03.5
0032:  BSF    05.0
0033:  BCF    1F.6
0034:  BSF    03.5
0035:  BCF    1F.0
0036:  BCF    1F.1
0037:  BCF    1F.2
0038:  BCF    1F.3
0039:  MOVLW  07
003A:  BCF    03.5
003B:  MOVWF  19
.................... { 
....................     
....................    while(TRUE) 
....................    { 
....................       if (!input(pin_a2)){ //é verdadeiro se tem alguma inf na porta serial 
003C:  BSF    03.5
003D:  BSF    05.2
003E:  BCF    03.5
003F:  BTFSC  05.2
0040:  GOTO   0CD
....................                    delay_us(150); 
0041:  MOVLW  31
0042:  MOVWF  20
0043:  DECFSZ 20,F
0044:  GOTO   043
0045:  GOTO   046
....................                    output_high(pin_a4); 
0046:  BSF    03.5
0047:  BCF    05.4
0048:  BCF    03.5
0049:  BSF    05.4
....................                    if (input(pin_a2)){caracter=1;} 
004A:  BSF    03.5
004B:  BSF    05.2
004C:  BCF    03.5
004D:  BTFSS  05.2
004E:  GOTO   052
004F:  MOVLW  01
0050:  MOVWF  24
0051:  GOTO   053
....................                    else{caracter=0;} 
0052:  CLRF   24
....................                    delay_us(91); 
0053:  MOVLW  1D
0054:  MOVWF  20
0055:  DECFSZ 20,F
0056:  GOTO   055
0057:  GOTO   058
0058:  NOP
....................                    output_low(pin_a4); 
0059:  BSF    03.5
005A:  BCF    05.4
005B:  BCF    03.5
005C:  BCF    05.4
....................                    if (input(pin_a2)){caracter=caracter+2;} 
005D:  BSF    03.5
005E:  BSF    05.2
005F:  BCF    03.5
0060:  BTFSS  05.2
0061:  GOTO   064
0062:  MOVLW  02
0063:  ADDWF  24,F
....................                    else{caracter=caracter;} 
....................                    delay_us(91); 
0064:  MOVLW  1D
0065:  MOVWF  20
0066:  DECFSZ 20,F
0067:  GOTO   066
0068:  GOTO   069
0069:  NOP
....................                    output_high(pin_a4); 
006A:  BSF    03.5
006B:  BCF    05.4
006C:  BCF    03.5
006D:  BSF    05.4
....................                    if (input(pin_a2)){caracter=caracter+4;} 
006E:  BSF    03.5
006F:  BSF    05.2
0070:  BCF    03.5
0071:  BTFSS  05.2
0072:  GOTO   075
0073:  MOVLW  04
0074:  ADDWF  24,F
....................                    else{caracter=caracter;} 
....................                    delay_us(91); 
0075:  MOVLW  1D
0076:  MOVWF  20
0077:  DECFSZ 20,F
0078:  GOTO   077
0079:  GOTO   07A
007A:  NOP
....................                    output_low(pin_a4); 
007B:  BSF    03.5
007C:  BCF    05.4
007D:  BCF    03.5
007E:  BCF    05.4
....................                    if (input(pin_a2)){caracter=caracter+8;} 
007F:  BSF    03.5
0080:  BSF    05.2
0081:  BCF    03.5
0082:  BTFSS  05.2
0083:  GOTO   086
0084:  MOVLW  08
0085:  ADDWF  24,F
....................                    else{caracter=caracter;} 
....................                    delay_us(91); 
0086:  MOVLW  1D
0087:  MOVWF  20
0088:  DECFSZ 20,F
0089:  GOTO   088
008A:  GOTO   08B
008B:  NOP
....................                    output_high(pin_a4); 
008C:  BSF    03.5
008D:  BCF    05.4
008E:  BCF    03.5
008F:  BSF    05.4
....................                    if (input(pin_a2)){caracter=caracter+16;} 
0090:  BSF    03.5
0091:  BSF    05.2
0092:  BCF    03.5
0093:  BTFSS  05.2
0094:  GOTO   097
0095:  MOVLW  10
0096:  ADDWF  24,F
....................                    else{caracter=caracter;} 
....................                    delay_us(91); 
0097:  MOVLW  1D
0098:  MOVWF  20
0099:  DECFSZ 20,F
009A:  GOTO   099
009B:  GOTO   09C
009C:  NOP
....................                    output_low(pin_a4); 
009D:  BSF    03.5
009E:  BCF    05.4
009F:  BCF    03.5
00A0:  BCF    05.4
....................                    if (input(pin_a2)){caracter=caracter+32;} 
00A1:  BSF    03.5
00A2:  BSF    05.2
00A3:  BCF    03.5
00A4:  BTFSS  05.2
00A5:  GOTO   0A8
00A6:  MOVLW  20
00A7:  ADDWF  24,F
....................                    else{caracter=caracter;} 
....................                    delay_us(91); 
00A8:  MOVLW  1D
00A9:  MOVWF  20
00AA:  DECFSZ 20,F
00AB:  GOTO   0AA
00AC:  GOTO   0AD
00AD:  NOP
....................                    output_high(pin_a4); 
00AE:  BSF    03.5
00AF:  BCF    05.4
00B0:  BCF    03.5
00B1:  BSF    05.4
....................                    if (input(pin_a2)){caracter=caracter+64;} 
00B2:  BSF    03.5
00B3:  BSF    05.2
00B4:  BCF    03.5
00B5:  BTFSS  05.2
00B6:  GOTO   0B9
00B7:  MOVLW  40
00B8:  ADDWF  24,F
....................                    else{caracter=caracter;} 
....................                    delay_us(91); 
00B9:  MOVLW  1D
00BA:  MOVWF  20
00BB:  DECFSZ 20,F
00BC:  GOTO   0BB
00BD:  GOTO   0BE
00BE:  NOP
....................                    output_low(pin_a4); 
00BF:  BSF    03.5
00C0:  BCF    05.4
00C1:  BCF    03.5
00C2:  BCF    05.4
....................                    if (input(pin_a2)){caracter=caracter+128;} 
00C3:  BSF    03.5
00C4:  BSF    05.2
00C5:  BCF    03.5
00C6:  BTFSS  05.2
00C7:  GOTO   0CA
00C8:  MOVLW  80
00C9:  ADDWF  24,F
....................                    else{caracter=caracter;} 
....................                     
....................                    printf("%c",caracter); 
00CA:  MOVF   24,W
00CB:  MOVWF  25
00CC:  GOTO   00A
....................                     
....................                     
....................                     } ; 
00CD:  GOTO   03C
....................    } 
....................  
.................... } 
00CE:  SLEEP

Configuration Fuses:
   Word  1: 3FA4   INTRC_IO NOWDT PUT MCLR NOBROWNOUT NOPROTECT NOCPD
